{"version":3,"file":"Custom.js","sourceRoot":"","sources":["../../../../../../../../preprocess-dist/react-composites/src/composites/CallComposite/components/buttons/Custom.tsx"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,iDAAiD;AACjD,OAAO,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AACvC,OAAO,EAAE,gBAAgB,EAAwB,+CAAmC;AACpF,OAAO,KAAK,MAAM,OAAO,CAAC;AAQ1B,eAAe;AACf,MAAM,CAAC,MAAM,+BAA+B,GAAG,CAAC,wBAA4D,EAAE,WAAoC,EAAiB,EAAE;IACnK,MAAM,QAAQ,GAAG;QACf,OAAO,EAAE,SAAS;QAClB,QAAQ,EAAE,SAAS;QACnB,SAAS,EAAE,SAAS;KACrB,CAAC;IACF,IAAI,CAAC,wBAAwB,EAAE;QAC7B,OAAO,QAAQ,CAAC;KACjB;IACD,MAAM,cAAc,GAAG,wBAAwB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACzD,WAAW;KACZ,CAAC,CAAC,CAAC;IACJ,KAAK,MAAM,GAAG,IAAI,QAAQ,EAAE;QAC1B,QAAQ,CAAC,GAAG,CAAC,GAAG,0CACX,cAAc,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,WAAW,CAAC,SAAS,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE,WAAC,OAAA,oBAAC,gBAAgB,IAAC,eAAe,EAAE,WAAW,CAAC,eAAe,EAAE,SAAS,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,WAAW,CAAC,QAAQ,EAAE,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,GAAG,EAAE,MAAA,WAAW,CAAC,GAAG,mCAAI,GAAG,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,WAAW,EAAE,YAAY,EAAE,GAAG,EAAE,WAAC,OAAA,oBAAC,IAAI,IAAC,QAAQ,EAAE,MAAA,WAAW,CAAC,QAAQ,mCAAI,sBAAsB,GAAI,CAAA,EAAA,EAAE,SAAS,EAAE,WAAW,CAAC,SAAS,EAAE,IAAI,EAAE,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,WAAW,CAAC,MAAM,GAAI,CAAA,EAAA,CAAC,CAC9f,CAAC;KACP;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC;AAEF,eAAe;AACf,MAAM,CAAC,MAAM,kCAAkC,GAAG,CAAC,OAA4B,EAAiD,EAAE;;IAChI,IAAI,QAAQ,GAAkD,SAAS,CAAC;IACxE,QAAQ,GAAG,MAAC,OAAqC,0CAAE,wBAAwB,CAAC;IAC5E,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// eslint-disable-next-line no-restricted-imports\nimport { Icon } from '@fluentui/react';\nimport { ControlBarButton, _DrawerMenuItemProps } from '@internal/react-components';\nimport React from 'react';\nimport { CustomCallControlButtonCallback, CustomCallControlButtonPlacement } from '../../../common/ControlBar/CustomButton';\nimport { CallControlDisplayType, _CommonCallControlOptions } from '../../../common/types/CommonCallControlOptions';\nimport { CallControlOptions } from '../../types/CallControlOptions';\n\n/** @private */\nexport type CustomButtons = { [key in CustomCallControlButtonPlacement]: JSX.Element | undefined };\n\n/** @private */\nexport const generateCustomControlBarButtons = (onFetchCustomButtonProps?: CustomCallControlButtonCallback[], displayType?: CallControlDisplayType): CustomButtons => {\n  const response = {\n    primary: undefined,\n    overflow: undefined,\n    secondary: undefined\n  };\n  if (!onFetchCustomButtonProps) {\n    return response;\n  }\n  const allButtonProps = onFetchCustomButtonProps.map(f => f({\n    displayType\n  }));\n  for (const key in response) {\n    response[key] = <>\n        {allButtonProps.filter(buttonProps => buttonProps.placement === key).map((buttonProps, i) => <ControlBarButton ariaDescription={buttonProps.ariaDescription} ariaLabel={buttonProps.ariaLabel} disabled={buttonProps.disabled} id={buttonProps.id} key={buttonProps.key ?? `${buttonProps.placement}_${i}`} onClick={buttonProps.onItemClick} onRenderIcon={() => <Icon iconName={buttonProps.iconName ?? 'ControlButtonOptions'} />} showLabel={buttonProps.showLabel} text={buttonProps.text} styles={buttonProps.styles} />)}\n      </>;\n  }\n  return response;\n};\n\n/** @private */\nexport const onFetchCustomButtonPropsTrampoline = (options?: CallControlOptions): CustomCallControlButtonCallback[] | undefined => {\n  let response: CustomCallControlButtonCallback[] | undefined = undefined;\n  response = (options as _CommonCallControlOptions)?.onFetchCustomButtonProps;\n  return response;\n};\"../../../../../../react-components/src\""]}