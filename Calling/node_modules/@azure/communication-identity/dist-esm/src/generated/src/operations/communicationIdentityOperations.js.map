{"version":3,"file":"communicationIdentityOperations.js","sourceRoot":"","sources":["../../../../../src/generated/src/operations/communicationIdentityOperations.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CommunicationIdentityOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IdentityRestClientContext } from \"../identityRestClientContext\";\nimport {\n  CommunicationIdentityCreateOptionalParams,\n  CommunicationIdentityCreateResponse,\n  CommunicationIdentityDeleteOptionalParams,\n  CommunicationIdentityRevokeAccessTokensOptionalParams,\n  CommunicationIdentityExchangeTeamsUserAccessTokenOptionalParams,\n  CommunicationIdentityExchangeTeamsUserAccessTokenResponse,\n  CommunicationIdentityTokenScope,\n  CommunicationIdentityIssueAccessTokenOptionalParams,\n  CommunicationIdentityIssueAccessTokenResponse\n} from \"../models\";\n\n/** Class containing CommunicationIdentityOperations operations. */\nexport class CommunicationIdentityOperationsImpl\n  implements CommunicationIdentityOperations {\n  private readonly client: IdentityRestClientContext;\n\n  /**\n   * Initialize a new instance of the class CommunicationIdentityOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IdentityRestClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Create a new identity, and optionally, an access token.\n   * @param options The options parameters.\n   */\n  create(\n    options?: CommunicationIdentityCreateOptionalParams\n  ): Promise<CommunicationIdentityCreateResponse> {\n    return this.client.sendOperationRequest({ options }, createOperationSpec);\n  }\n\n  /**\n   * Delete the identity, revoke all tokens for the identity and delete all associated data.\n   * @param id Identifier of the identity to be deleted.\n   * @param options The options parameters.\n   */\n  delete(\n    id: string,\n    options?: CommunicationIdentityDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { id, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Revoke all access tokens for the specific identity.\n   * @param id Identifier of the identity.\n   * @param options The options parameters.\n   */\n  revokeAccessTokens(\n    id: string,\n    options?: CommunicationIdentityRevokeAccessTokensOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { id, options },\n      revokeAccessTokensOperationSpec\n    );\n  }\n\n  /**\n   * Exchange an Azure Active Directory (Azure AD) access token of a Teams user for a new Communication\n   * Identity access token with a matching expiration time.\n   * @param token Azure AD access token of a Teams User to acquire a new Communication Identity access\n   *              token.\n   * @param appId Client ID of an Azure AD application to be verified against the appid claim in the\n   *              Azure AD access token.\n   * @param userId Object ID of an Azure AD user (Teams User) to be verified against the oid claim in the\n   *               Azure AD access token.\n   * @param options The options parameters.\n   */\n  exchangeTeamsUserAccessToken(\n    token: string,\n    appId: string,\n    userId: string,\n    options?: CommunicationIdentityExchangeTeamsUserAccessTokenOptionalParams\n  ): Promise<CommunicationIdentityExchangeTeamsUserAccessTokenResponse> {\n    return this.client.sendOperationRequest(\n      { token, appId, userId, options },\n      exchangeTeamsUserAccessTokenOperationSpec\n    );\n  }\n\n  /**\n   * Issue a new token for an identity.\n   * @param id Identifier of the identity to issue token for.\n   * @param scopes List of scopes attached to the token.\n   * @param options The options parameters.\n   */\n  issueAccessToken(\n    id: string,\n    scopes: CommunicationIdentityTokenScope[],\n    options?: CommunicationIdentityIssueAccessTokenOptionalParams\n  ): Promise<CommunicationIdentityIssueAccessTokenResponse> {\n    return this.client.sendOperationRequest(\n      { id, scopes, options },\n      issueAccessTokenOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path: \"/identities\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.CommunicationIdentityAccessTokenResult\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse\n    }\n  },\n  requestBody: {\n    parameterPath: {\n      createTokenWithScopes: [\"options\", \"createTokenWithScopes\"]\n    },\n    mapper: Mappers.CommunicationIdentityCreateRequest\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/identities/{id}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst revokeAccessTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/identities/{id}/:revokeAccessTokens\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst exchangeTeamsUserAccessTokenOperationSpec: coreClient.OperationSpec = {\n  path: \"/teamsUser/:exchangeAccessToken\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CommunicationIdentityAccessToken\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse\n    }\n  },\n  requestBody: {\n    parameterPath: { token: [\"token\"], appId: [\"appId\"], userId: [\"userId\"] },\n    mapper: { ...Mappers.TeamsUserExchangeTokenRequest, required: true }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst issueAccessTokenOperationSpec: coreClient.OperationSpec = {\n  path: \"/identities/{id}/:issueAccessToken\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CommunicationIdentityAccessToken\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse\n    }\n  },\n  requestBody: {\n    parameterPath: { scopes: [\"scopes\"] },\n    mapper: {\n      ...Mappers.CommunicationIdentityAccessTokenRequest,\n      required: true\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.id],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\n"]}